name: Build on Merge

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  build-binaries:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"

      - name: Install dependencies
        run: go mod tidy

      - name: Extract version information
        id: version
        run: |
          # Use git describe for version
          VERSION=$(git describe --tags --always --dirty)
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}

          # Get commit date
          DATE=$(git log -1 --format=%cd --date=short)

          # Get short commit hash
          HASH=$(git rev-parse --short HEAD)

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT
          echo "hash=$HASH" >> $GITHUB_OUTPUT

          echo "Version: $VERSION"
          echo "Date: $DATE"
          echo "Hash: $HASH"

      - name: Build for Linux (amd64)
        run: |
          GOOS=linux GOARCH=amd64 go build \
            -ldflags "-X main.Semver=${{ steps.version.outputs.version }} -X main.Date=${{ steps.version.outputs.date }} -X main.Hash=${{ steps.version.outputs.hash }}" \
            -o build/moke-linux-amd64 \
            cmd/moke.go

      - name: Build for Linux (arm64)
        run: |
          GOOS=linux GOARCH=arm64 go build \
            -ldflags "-X main.Semver=${{ steps.version.outputs.version }} -X main.Date=${{ steps.version.outputs.date }} -X main.Hash=${{ steps.version.outputs.hash }}" \
            -o build/moke-linux-arm64 \
            cmd/moke.go

      - name: Build for macOS (amd64)
        run: |
          GOOS=darwin GOARCH=amd64 go build \
            -ldflags "-X main.Semver=${{ steps.version.outputs.version }} -X main.Date=${{ steps.version.outputs.date }} -X main.Hash=${{ steps.version.outputs.hash }}" \
            -o build/moke-darwin-amd64 \
            cmd/moke.go

      - name: Build for macOS (arm64)
        run: |
          GOOS=darwin GOARCH=arm64 go build \
            -ldflags "-X main.Semver=${{ steps.version.outputs.version }} -X main.Date=${{ steps.version.outputs.date }} -X main.Hash=${{ steps.version.outputs.hash }}" \
            -o build/moke-darwin-arm64 \
            cmd/moke.go

      - name: Make binaries executable
        run: |
          chmod +x build/moke-*

      - name: Test binaries
        run: |
          echo "Testing Linux amd64:"
          ./build/moke-linux-amd64 -v

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: moke-binaries-${{ steps.version.outputs.version }}
          path: build/
          retention-days: 7

      - name: Build Summary
        run: |
          echo "## ðŸš€ Build Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ steps.version.outputs.hash }}" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** ${{ steps.version.outputs.date }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Built Binaries:" >> $GITHUB_STEP_SUMMARY
          echo "- \`moke-linux-amd64\` (Linux Intel/AMD 64-bit)" >> $GITHUB_STEP_SUMMARY
          echo "- \`moke-linux-arm64\` (Linux ARM 64-bit)" >> $GITHUB_STEP_SUMMARY
          echo "- \`moke-darwin-amd64\` (macOS Intel)" >> $GITHUB_STEP_SUMMARY
          echo "- \`moke-darwin-arm64\` (macOS Apple Silicon)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Download:" >> $GITHUB_STEP_SUMMARY
          echo "Binaries are available as build artifacts for 7 days." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "To create a release, use the release script:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "./scripts/release.sh create 1.0.0" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

